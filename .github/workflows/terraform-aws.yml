name: "Terraform Deployment"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ "closed" ]

  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
        - Terraform_Apply
        - Terraform_Destroy

jobs:
  terraform_apply:
    name: "Terraform_Apply"
    if: ${{ github.event.inputs.action == 'Terraform_Apply' }}
    runs-on: ubuntu-latest

    env:
      db_username: ${{ secrets.DB_USERNAME }}
      db_password: ${{ secrets.DB_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        tf_version: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Terraform init
      run: terraform init

    - name: Terraform plan
      run: terraform plan

    - name: Terraform apply
      run: terraform apply -auto-approve

  terraform_destroy:
    name: "Terraform_Destroy"
    if: ${{ github.event.inputs.action == 'Terraform_Destroy' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        tf_version: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Terraform init
      run: terraform init

    - name: Terraform destroy
      run: terraform destroy -auto-approve
